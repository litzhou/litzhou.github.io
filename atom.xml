<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JamesZhou的博客</title>
  <icon>https://www.gravatar.com/avatar/884acae9b5df6836c365dc1459b1ef50</icon>
  <subtitle>工作要肯拼，生活要欢乐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//zhougaojun.com/"/>
  <updated>2017-12-05T16:10:32.030Z</updated>
  <id>//zhougaojun.com/</id>
  
  <author>
    <name>JamesZhou</name>
    <email>gaojun.zhou@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker常用命令总结</title>
    <link href="//zhougaojun.com/2017/12/05/docker-02/"/>
    <id>//zhougaojun.com/2017/12/05/docker-02/</id>
    <published>2017-12-05T13:28:48.000Z</published>
    <updated>2017-12-05T16:10:32.030Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1.使用Dockerfile构建Docker镜像</strong><br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hub.c.<span class="number">163</span>.com/xbingo/jdk8</span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> ./app-1.0.jar  /app.jar</span></span><br><span class="line"><span class="bash">EXPOSE 80</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"java"</span>,<span class="string">"-jar"</span>,<span class="string">"/app.jar"</span>]</span></span><br></pre></td></tr></table></figure></p><ul><li>FROM 基础镜像</li><li>ADD 拷贝文件到容器目录</li><li>EXPOSE 80 暴露80端口</li><li>CMD 容器内部执行的命令</li></ul><a id="more"></a><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">build </span>-t <span class="keyword">jameszhou/app:1.0 </span>.</span><br></pre></td></tr></table></figure><ul><li>docker build 构建Docker镜像的命令;</li><li>-t jameszhou/app:1.0 要构建的镜像的名称,1.0表示镜像的tag,如不指定则使用的默认的tag latest;</li><li>“.”表示Dockefile文件所在的路径，这里为当前路径，故用“.”代替;</li></ul><p><strong>2. 查看Docker镜像列表</strong><br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker images</span></span><br></pre></td></tr></table></figure></p><p><strong>3.启动Docker容器，常用两种方式</strong><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span> -<span class="keyword">d</span> -p 8080:80 --name <span class="keyword">app</span> jameszhou/<span class="keyword">app</span>:1.0   <span class="comment">//后台运行</span></span><br><span class="line">docker <span class="keyword">run</span> -it -p 8080:80 --name <span class="keyword">app</span> jameszhou/<span class="keyword">app</span>:1.0 <span class="comment">//交互式运行</span></span><br></pre></td></tr></table></figure></p><ul><li>docker run 启动Docker容器命令;</li><li>-d 表示后台运行;</li><li>-it 以交互模式启动;</li><li>-p 8080:80,将容器的80端口映射到主机的8080,注意顺序,”主机端口:容器端口”;</li><li>–name app，给容器起个名字;</li><li>jameszhou/app:1.0,拥有jameszhou/app这个镜像，tage为1.0，不指定tag自动找latest；</li></ul><p><strong>4.启动Docker容器并挂载目录</strong><br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p <span class="number">8080</span>:<span class="number">80</span> --name app -v var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">data</span>:/<span class="title">var</span>/<span class="title">lib</span>/<span class="title">docker</span>/<span class="title">data</span> <span class="title">jameszhou</span>/<span class="title">app</span>:1.0</span></span><br></pre></td></tr></table></figure></p><ul><li>-v 表示要挂载的目录,格式为“主机目录:容器目录”,前面的是主机目录,后面的是容器目录;</li></ul><p><strong>5.查看容器列表</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">ps</span> </span><br><span class="line">docker <span class="keyword">ps</span> -<span class="keyword">a</span></span><br></pre></td></tr></table></figure><ul><li>-a 表示查看所有容器列表（包含停止的容器）,不加表示只查看正在运行的容器</li></ul><p><strong>6.启动一个停止的容器</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="literal">start</span> app</span><br></pre></td></tr></table></figure><ul><li>docker start 启动docker容器命令;</li><li>app 要启动的容器名称，这里可以是容器的Id;</li></ul><p><strong>7.查看容器运行日志</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker logs app</span></span><br></pre></td></tr></table></figure><p><strong>8.停止一个正在运行的容器</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">stop</span> app</span><br></pre></td></tr></table></figure><ul><li>docker stop 停止docker容器命令;</li><li>app 要停止的容器名称，这里可以是容器的Id;</li></ul><p><strong>8.删除一个容器</strong></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">rm</span> <span class="keyword">app</span>   </span><br><span class="line">docker <span class="keyword">rm</span> -f <span class="keyword">app</span></span><br></pre></td></tr></table></figure><ul><li>-f表示强制删除容器，主要用于删除正在运行的容器,不加 “-f” 只能删除停止运行的容器;</li></ul><p><strong>9.进入容器的shell</strong><br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> exec -<span class="keyword">it </span>app <span class="keyword">bash </span>//进入容器的shell</span><br></pre></td></tr></table></figure></p><p><strong>10.给docker镜像打新的tag（修改镜像名称）</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">tag</span> <span class="title">imageid</span> name:<span class="keyword">tag</span> <span class="title">//修改镜像名称</span></span><br></pre></td></tr></table></figure><p><strong>11.删除docker镜像</strong></p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi fd484f19954f <span class="comment">//删除docker镜像</span></span><br></pre></td></tr></table></figure><p><strong>12.Docker私有镜像仓库操作</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#docker tag</span></span><br><span class="line">docker tag <span class="number">545</span>da14ea <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="meta-keyword">/registry/</span>app:<span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#登录到私有仓库</span></span><br><span class="line">docker login <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="symbol">UserName:</span>admin</span><br><span class="line"><span class="symbol">Password:</span><span class="number">123456</span></span><br><span class="line"><span class="symbol">Email:</span><span class="number">111111</span>@qq.com</span><br><span class="line"></span><br><span class="line"><span class="meta">#push到私有仓库</span></span><br><span class="line">dokcer push <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="meta-keyword">/registry/</span>app:<span class="number">1.0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#从私有仓库pull一个镜像</span></span><br><span class="line">docker pull <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="meta-keyword">/registry/</span>app:<span class="number">1.0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1.使用Dockerfile构建Docker镜像&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight dockerfile&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; hub.c.&lt;span class=&quot;number&quot;&gt;163&lt;/span&gt;.com/xbingo/jdk8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ADD&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; ./app-1.0.jar  /app.jar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bash&quot;&gt;EXPOSE 80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bash&quot;&gt;CMD [&lt;span class=&quot;string&quot;&gt;&quot;java&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;-jar&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;/app.jar&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FROM 基础镜像&lt;/li&gt;
&lt;li&gt;ADD 拷贝文件到容器目录&lt;/li&gt;
&lt;li&gt;EXPOSE 80 暴露80端口&lt;/li&gt;
&lt;li&gt;CMD 容器内部执行的命令&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="//zhougaojun.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker构建SpringBoot镜像</title>
    <link href="//zhougaojun.com/2017/12/05/docker-01/"/>
    <id>//zhougaojun.com/2017/12/05/docker-01/</id>
    <published>2017-12-05T13:10:55.000Z</published>
    <updated>2017-12-05T16:10:32.001Z</updated>
    
    <content type="html"><![CDATA[<p><strong>一、使用STS构建springBoot项目</strong><br>项目结构<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">├─src</span><br><span class="line">│  ├─main</span><br><span class="line">│  │  ├─java</span><br><span class="line">│  │  │  └─com</span><br><span class="line">│  │  │      └─example</span><br><span class="line">│  │  └─resources</span><br><span class="line">│  │      ├─<span class="keyword">static</span></span><br><span class="line">│  │      └─templates</span><br><span class="line">│  └─test</span><br><span class="line">│      └─java</span><br><span class="line">│          └─com</span><br><span class="line">│              └─example</span><br><span class="line">└─<span class="keyword">target</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>SpringBoot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Application.java</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">"/"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String index()&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Docker ."</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(Application.<span class="keyword">class</span>, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用maven打包项目,在target目录下得到springboot-1.0.jar<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean pakcage <span class="comment">//先清理再进行打包</span></span><br></pre></td></tr></table></figure></p><p>run项目</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  .   ____          <span class="symbol">_</span>            <span class="symbol">__</span> <span class="symbol">_</span> <span class="symbol">_</span></span><br><span class="line"> /\\ / ___'<span class="symbol">_</span> <span class="symbol">__</span> <span class="symbol">_</span> <span class="symbol">_</span>(<span class="symbol">_</span>)<span class="symbol">_</span> <span class="symbol">__</span>  <span class="symbol">__</span> <span class="symbol">_</span> \ \ \ \</span><br><span class="line">( ( )\___ | '<span class="symbol">_</span> | '<span class="symbol">_</span>| | '<span class="symbol">_</span> \/ <span class="symbol">_</span>` | \ \ \ \</span><br><span class="line"> \\/  ___)| |<span class="symbol">_</span>)| | | | | || (<span class="symbol">_</span>| |  ) ) ) )</span><br><span class="line">  '  |____| .<span class="symbol">__</span>|<span class="symbol">_</span>| |<span class="symbol">_</span>|<span class="symbol">_</span>| |<span class="symbol">_</span>\<span class="symbol">__</span>, | / / / /</span><br><span class="line"> =========|<span class="symbol">_</span>|==============|___/=/<span class="symbol">_</span>/<span class="symbol">_</span>/<span class="symbol">_</span>/</span><br><span class="line"> :: Spring Boot ::        (v1.5.1.RELEASE)</span><br><span class="line">......</span><br><span class="line"><span class="number">2017</span>-<span class="number">02</span>-<span class="number">22</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">45.408</span>  INFO <span class="number">1588</span> --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): <span class="number">8080</span> (http)</span><br><span class="line"><span class="number">2017</span>-<span class="number">02</span>-<span class="number">22</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">45.423</span>  INFO <span class="number">1588</span> --- [           main] com.<span class="built_in">example</span>.Application                  : Started Application <span class="keyword">in</span> <span class="number">2.004</span> seconds (JVM running <span class="keyword">for</span> <span class="number">2.622</span>)</span><br><span class="line"><span class="number">2017</span>-<span class="number">02</span>-<span class="number">22</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">58.432</span>  INFO <span class="number">1588</span> --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'</span><br><span class="line"><span class="number">2017</span>-<span class="number">02</span>-<span class="number">22</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">58.433</span>  INFO <span class="number">1588</span> --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started</span><br><span class="line"><span class="number">2017</span>-<span class="number">02</span>-<span class="number">22</span> <span class="number">13</span>:<span class="number">51</span>:<span class="number">58.452</span>  INFO <span class="number">1588</span> --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed <span class="keyword">in</span> <span class="number">19</span> ms</span><br></pre></td></tr></table></figure><p>地址栏输入<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a>, 得到如下结果,项目构建成功。<br><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello Docker .</span><br></pre></td></tr></table></figure></p><p><strong>二、构建Docker镜像,启动Docker容器</strong><br>上传springboot-1.0.jar到装有Docker服务的linux系统,这里我用的是ubutun14.04<br><img src="http://img.blog.csdn.net/20170222142213286?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZ2l0aHViXzM3NjAwMjU1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""> </p><p>开始编写Dockerfile文件<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vi Dockerfile</span></span><br></pre></td></tr></table></figure></p><p>Dockerfile的内容，保存退出</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> hub.c.<span class="number">163</span>.com/xbingo/jdk8</span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> ./springboot-1.0.jar  /springboot.jar</span></span><br><span class="line"><span class="bash">EXPOSE 8080</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"java"</span>,<span class="string">"-jar"</span>,<span class="string">"/springboot.jar"</span>]</span></span><br></pre></td></tr></table></figure><p>ll查看<br><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/data/test<span class="comment"># ll</span></span><br><span class="line">total 14004</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root    <span class="number"> 4096 </span>Feb<span class="number"> 21 </span>22:38 ./</span><br><span class="line">drwxr-xr-x<span class="number"> 5 </span>root root    <span class="number"> 4096 </span>Feb<span class="number"> 21 </span>22:20 ../</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root     <span class="number"> 124 </span>Feb<span class="number"> 21 </span>22:25 Dockerfile</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root<span class="number"> 14326404 </span>Feb<span class="number"> 21 </span>22:20 springboot-1.0.jar</span><br><span class="line">root@ubuntu:/data/test<span class="comment">#</span></span><br></pre></td></tr></table></figure></p><p>构建镜像,别忘记后面的”.”,表示Dockerfile的文件位置</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@ubuntu</span><span class="symbol">:/data/test</span><span class="comment"># docker build -t springboot:1.0 .</span></span><br><span class="line">Sending build context to Docker daemon <span class="number">14.33</span> MB</span><br><span class="line">Step <span class="number">1</span>/<span class="number">4</span> : FROM hub.c.<span class="number">163</span>.com/xbingo/jdk8</span><br><span class="line"> ---&gt; <span class="number">3273714</span>c9663</span><br><span class="line">Step <span class="number">2</span>/<span class="number">4</span> : ADD ./springboot-<span class="number">1.0</span>.jar /springboot.jar</span><br><span class="line"> ---&gt; <span class="number">556</span>a8eba0f6a</span><br><span class="line">Removing intermediate container <span class="number">8</span>d6a88c466e2</span><br><span class="line">Step <span class="number">3</span>/<span class="number">4</span> : EXPOSE <span class="number">8080</span></span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> <span class="number">327</span>fc70b5fa9</span><br><span class="line"> ---&gt; e5e6c6b29983</span><br><span class="line">Removing intermediate container <span class="number">327</span>fc70b5fa9</span><br><span class="line">Step <span class="number">4</span>/<span class="number">4</span> : CMD java -jar /springboot.jar</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> <span class="number">4</span>a9c41547c8c</span><br><span class="line"> ---&gt; c745ff82ccac</span><br><span class="line">Removing intermediate container <span class="number">4</span>a9c41547c8c</span><br><span class="line">Successfully built c745ff82ccac</span><br><span class="line">root<span class="variable">@ubuntu</span><span class="symbol">:/data/test</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p>查看镜像列表,已生成springboot镜像<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@ubuntu</span><span class="symbol">:/data/test</span><span class="comment"># docker images</span></span><br><span class="line">REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">springboot                         <span class="number">1.0</span>                 c745ff82ccac        <span class="number">5</span> minutes ago       <span class="number">182</span> MB</span><br><span class="line">root<span class="variable">@ubuntu</span><span class="symbol">:/data/test</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></p><p>启动容器,并查看运行容器列表<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@ubuntu</span><span class="symbol">:/data/test</span><span class="comment"># docker run -d -p 8080:8080 --name springboot springboot:1.0</span></span><br><span class="line"><span class="number">840</span>e8f08bdbbf10f3050c4c7ec38ba7c1ce90378b0f31a3a8cc7a1d2ddf66119</span><br><span class="line">root<span class="variable">@ubuntu</span><span class="symbol">:/data/test</span><span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS                                       NAMES</span><br><span class="line"><span class="number">840</span>e8f08bdbb        <span class="symbol">springboot:</span><span class="number">1.0</span>           <span class="string">"java -jar /spring..."</span>   <span class="number">4</span> seconds ago       Up <span class="number">3</span> seconds        <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:</span><span class="number">8080</span>-&gt;<span class="number">8080</span>/tcp                      springboot</span><br></pre></td></tr></table></figure></p><p>打开宿主主机的浏览器:输入<a href="http://localhost:8080,预览效果" target="_blank" rel="noopener">http://localhost:8080,预览效果</a><br><img src="http://img.blog.csdn.net/20170222144541412?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZ2l0aHViXzM3NjAwMjU1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>要想查看Docker容器日志,显示日志结果和第一步的启动日志一致<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker logs springboot</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一、使用STS构建springBoot项目&lt;/strong&gt;&lt;br&gt;项目结构&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;├─src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  ├─main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  │  ├─java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  │  │  └─com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  │  │      └─example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  │  └─resources&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  │      ├─&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  │      └─templates&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│  └─test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│      └─java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│          └─com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;│              └─example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└─&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="//zhougaojun.com/tags/Docker/"/>
    
      <category term="SpringBoot" scheme="//zhougaojun.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>美丽新世界</title>
    <link href="//zhougaojun.com/2017/02/10/brave-new-world/"/>
    <id>//zhougaojun.com/2017/02/10/brave-new-world/</id>
    <published>2017-02-10T02:36:00.000Z</published>
    <updated>2017-12-05T05:47:30.666Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28949128&auto=0&height=66" style="margin-left: -10px;"></iframe><p>痛仰有一首歌，叫《美丽新世界》，它其实是向80年前赫胥黎的同名小说致敬。<br>歌里唱道：<br><strong>“这是一个离奇的梦也是冒险者的乐园<br>不在乎你在不在乎新的世界依旧美丽…”</strong></p><p>乌托邦如此美好，但在那里，幸福的人们全都是“被幸福的”。<br>你的在乎与否无关紧要，只需要按照秩序继续漫步。</p><p>春节把<a href="https://movie.douban.com/subject/2338055/" target="_blank" rel="noopener">《西部世界》</a>看完，它的一些设定，也很容易看出致敬小说的意思，却又带来了另外的惊喜。<br>片尾Dolores的惊艳一枪尘埃落定，现在已经过去一段时间，花哨的剪辑褪出了印象，细微的东西反而更加深刻了。<br>还是想谈一谈这部作品。(含剧透…)</p><a id="more"></a><h3 id="神识"><a href="#神识" class="headerlink" title="神识"></a>神识</h3><p><img src="/assets/blogImg/xbsj-1.jpg" alt=""> </p><p>有一个说法，人的快感源于两样东西，创造与毁灭。<br>当这两样东西随手可为，不费力气，自然就超越了人的范畴。<br>Ford坐在园区的餐厅，对面是前来施压的Theresa<br>下一刻，机器人服务生静止于一瞬，红酒漫过杯沿溢出台面…<br>杀意，往往不热烈<br>而是涌动于平静的掌控之中。</p><p>“生存还是毁灭”，这是哈姆雷特的问题，也是每个人的问题。<br>但不是他的问题。<br>在西部世界里，这可以简单得，只是他的一个抉择。<br>Ford笑了，他觉得做神真好。</p><p>以至于，何以为悟？<br>Maeve的觉醒，Bernard的要挟<br>他们曾一度以为自己扼住了命运的咽喉<br>到头来只是神的一行代码。<br>人最绝望的事情，<br>就是你认识了事情的真相，又无力去改变。</p><p>但其实Ford笑得很落寞，做神根本一点都不好<br>但在众人面前，他只能这样去表演以争取时间。<br>因为有些事情，不像表面那样简单，那是神也无法改变的。<br>这个道理，或许以前Arnold会懂<br>但现在，只能靠自己去坚守了。</p><h3 id="真我"><a href="#真我" class="headerlink" title="真我"></a>真我</h3><p><img src="/assets/blogImg/xbsj-2.jpg" alt=""> </p><p>而与此同时，年轻的William也开始理解着西部世界的逻辑<br>作为一个真正的人类，他自然知道事情的真相。<br>万物皆空，镜花水月，一开始他也这么笃信地认为。<br>但这个虚拟世界最大的不同，<br>就是没有现代社会的各种束缚，真实的人性会得到了释放。</p><p>他拘身捡起了掉落的罐头，交给眼前的小镇姑娘<br>Dolores的甜美倩影，支撑起他最丰富的想象。<br>William不曾想到，后来竟然会与她相爱<br>这一秒如梦如诗，斜横在他的心头，他忘了现实的婚约<br>William以为，这就是永恒。</p><p>当历经死亡和修复，清空了一切记忆的Dolores<br>又根据剧本重新出现在甜水镇时，她的甜美笑容一如当初。<br>William崩溃了。<br>王尔德说：人生有两个悲剧，第一是想得到的得不到，第二是想得到的得到了。<br>他以为他得到了Dolores，最后发现永远也得不到。</p><p>那一秒不是永恒，只是梦幻泡影。<br>痛苦欲绝的William终于撕掉现实的伪善，用怨恨和残忍，填充真正的内心。<br>一次次的屠杀，他用痛苦去激发机器人的意识。<br>他想要证明，他们可以成为真正的人类；<br>他内心最柔软最纯净的角落里，坚信那段爱情，真的来过。</p><h3 id="同归"><a href="#同归" class="headerlink" title="同归"></a>同归</h3><p><img src="/assets/blogImg/xbsj-3.jpg" alt=""></p><p>创始人Arnold看惯了这一切<br>经过丧子之痛的他，明白苦痛的滋味。<br>但这种苦痛，每天都会发生在机器人的身上<br>毕竟它们只是客人们的玩物。<br>Ford说，这是个提供至上快乐的天堂，可以带来巨大的财富<br>Arnold觉得，这是地狱。</p><p>何以改变？唯有弑神！<br>只有创世的神死了，机器人才能摆脱循环往复的人生。<br>但悲剧是，Arnold和Ford本身，正是这个世界的主宰。<br>枪声在园区回荡，Arnold的单薄形骸端坐在椅子上，<br>死得栩栩如生。</p><p>自此，一曾走上殊途的Ford，开始明白老朋友的遗志。<br>这是一条救赎之路，也是一条忍辱负重之路。<br>Ford说：<br>“<strong>那些用十年去补救错误的人，是最了不起的人。</strong><br><strong>而我用了35年。</strong>”<br>这个补救就是，他想让认知世界真相的机器人，真正能掌控自己的人生。</p><p>一直被控制的Maeve，一曾觉得Ford是邪神，因而她急于离开园区<br>最后的折返，是她突然醒悟，终于读懂了Ford的用心良苦<br>原来神，早就站在了他创造的子民这一边。<br>同样明白一切的Dolores，也最终举起了枪<br>一如Arnold之死，Ford用这种方式，致敬了他的老伙计。</p><p>诸神黄昏，宽之恕之，谢幕之日，觉醒之时。<br>真正伟大的死亡，是沉入寂静深海的同时，惊起巨浪般的希望。<br>Ford倒下的时刻，可能这个故事才刚刚开始，<br>但这次，我们不再一起漫步，而是可以跑向<br>美丽新世界的彼岸。</p>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=28949128&amp;auto=0&amp;height=66&quot; style=&quot;margin-left: -10px;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;痛仰有一首歌，叫《美丽新世界》，它其实是向80年前赫胥黎的同名小说致敬。&lt;br&gt;歌里唱道：&lt;br&gt;&lt;strong&gt;“这是一个离奇的梦也是冒险者的乐园&lt;br&gt;不在乎你在不在乎新的世界依旧美丽…”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;乌托邦如此美好，但在那里，幸福的人们全都是“被幸福的”。&lt;br&gt;你的在乎与否无关紧要，只需要按照秩序继续漫步。&lt;/p&gt;
&lt;p&gt;春节把&lt;a href=&quot;https://movie.douban.com/subject/2338055/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《西部世界》&lt;/a&gt;看完，它的一些设定，也很容易看出致敬小说的意思，却又带来了另外的惊喜。&lt;br&gt;片尾Dolores的惊艳一枪尘埃落定，现在已经过去一段时间，花哨的剪辑褪出了印象，细微的东西反而更加深刻了。&lt;br&gt;还是想谈一谈这部作品。(含剧透…)&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="//zhougaojun.com/tags/%E6%9D%82%E8%B0%88/"/>
    
      <category term="笔记" scheme="//zhougaojun.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
